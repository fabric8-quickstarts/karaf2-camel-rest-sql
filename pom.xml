<!--

     Copyright 2005-2016 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>io.fabric8.quickstarts</groupId>
  <artifactId>karaf2-camel-rest-sql</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <name>Fabric8 :: Quickstarts :: Karaf 2 :: Camel Rest using SQL</name>
  <description>Karaf 2 example running a Camel route connecting to a SQL database</description>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- configure the versions you want to use here -->
    <fabric8.version>2.3.2</fabric8.version>
    <mysql.version>8.0.28</mysql.version>

    <!-- Maven plugin versions -->
    <fabric8.maven.plugin.version>3.5.17</fabric8.maven.plugin.version>
    <karaf.maven.plugin.version>4.0.8</karaf.maven.plugin.version>
    <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
    <maven-bundle-plugin.version>2.3.7</maven-bundle-plugin.version>
    <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- import fabric8 platform bom first -->
      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-project-bom-fuse-karaf</artifactId>
        <version>${fabric8.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <!-- Camel -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-sql</artifactId>
    </dependency>

    <!-- MySQL database -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-pool</groupId>
      <artifactId>commons-pool</artifactId>
      <version>1.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.servicemix.bundles</groupId>
      <artifactId>org.apache.servicemix.bundles.commons-dbcp</artifactId>
      <version>1.4_3</version>
    </dependency>

    <!-- Karaf micro-container dependencies -->
    <dependency>
      <!-- scope is compile so all features (there is only one) are installed into startup.properties,
      and the feature repo itself is not added in etc/org.apache.karaf.features.cfg file -->
      <groupId>org.jboss.fuse</groupId>
      <artifactId>fuse-karaf-framework</artifactId>
      <type>kar</type>
      <!-- no need to download kar dependencies -->
      <exclusions>
        <exclusion>
          <groupId>*</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.fabric8.kubernetes</groupId>
      <artifactId>kubernetes-karaf</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>
    <dependency>
      <groupId>io.fabric8</groupId>
      <artifactId>fabric8-karaf-features</artifactId>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <!-- Compiler plugin enforces Java 1.8 compatibility -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
      </plugin>

      <!-- plugin goals have to be executed in order -->
      <!-- 1. install the bundle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>${maven-install-plugin.version}</version>
        <executions>
          <execution>
            <id>default-install</id>
            <goals>
              <goal>install</goal>
            </goals>
            <phase>install</phase>
          </execution>
        </executions>
      </plugin>

      <!-- 2. create Karaf assembly -->
      <!-- karaf-maven-plugin creates custom micro-service distribution -->
      <plugin>
        <groupId>org.apache.karaf.tooling</groupId>
        <artifactId>karaf-maven-plugin</artifactId>
        <version>${karaf.maven.plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>karaf-assembly</id>
            <goals>
              <goal>assembly</goal>
            </goals>
            <phase>install</phase>
          </execution>
        </executions>
        <configuration>
          <javase>1.8</javase>
          <!-- we are using karaf 2.4.x -->
          <karafVersion>v24</karafVersion>
          <useReferenceUrls>true</useReferenceUrls>
          <archiveTarGz>false</archiveTarGz>
          <!-- do not include build output directory -->
          <includeBuildOutputDirectory>false</includeBuildOutputDirectory>
          <startupFeatures>
            <feature>karaf-framework</feature>
            <feature>shell</feature>
            <feature>scr</feature>
            <feature>jaas</feature>
            <feature>aries-blueprint</feature>
            <feature>camel-blueprint</feature>
            <feature>camel-servlet</feature>
            <feature>camel-sql</feature>
            <feature>camel-jackson</feature>
            <feature>camel-swagger-java</feature>
            <feature>kubernetes-client</feature>
            <feature>openshift-client</feature>
            <feature>fabric8-karaf-blueprint</feature>
            <feature>fabric8-karaf-checks</feature>
          </startupFeatures>
          <startupBundles>
            <bundle>mvn:${project.groupId}/${project.artifactId}/${project.version}</bundle>
          </startupBundles>
        </configuration>
      </plugin>

      <!-- 3. create Docker image -->
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>fabric8-maven-plugin</artifactId>
        <version>${fabric8.maven.plugin.version}</version>
        <executions>
          <execution>
            <id>generate-resource</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>resource</goal>
            </goals>
          </execution>
          <execution>
            <id>build-image</id>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
